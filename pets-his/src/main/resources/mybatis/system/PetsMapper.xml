<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petHis.project.system.pets.mapper.PetsMapper">
    
    <resultMap type="Pets" id="PetsResult">
        <result property="petId"    column="pet_id"    />
        <result property="name"    column="petName"    />
        <result property="petPic"    column="pet_pic"    />
        <result property="type"    column="type"    />
        <result property="birthday"    column="birthday"    />
        <result property="clientId"    column="client_id"    />
        <result property="healthStatus"    column="health_status"    />
        <!-- 非数据库字段映射 客户名 -->
        <result property="clientName" column="clientName"/>
        <!-- 非数据库字段映射 客户电话-->
        <result property="clientPhone" column="clientPhone"/>
        <result property="insuranceId" column="insurance_id"/>
        <result property="insuranceEndAt" column="insurance_end_at"/>
    </resultMap>

<!--    <resultMap type="Clients" id="ClientsResult">-->
<!--        <result property="clientId"    column="client_id"    />-->
<!--        <result property="name"    column="name"    />-->
<!--        <result property="phone"    column="phone"    />-->
<!--        <result property="address"    column="address"    />-->
<!--    </resultMap>-->

<!--    <resultMap id="PetsClientsResult" type="Pets" extends="PetsResult">-->
<!--        <collection property="clientsList" ofType="Clients" column="pet_id" select="selectClientsList" />-->
<!--    </resultMap>-->

    <sql id="selectPetsVo">
        select p.pet_id, p.name as petName, p.pet_pic, p.type, p.birthday, p.client_id, p.health_status,p.insurance_id,p.insurance_end_at,
               c.name as clientName, c.phone as clientPhone
        from pets p
                 left join clients c on p.client_id = c.client_id
    </sql>

    <select id="selectPetsList" parameterType="Pets" resultMap="PetsResult">
        <include refid="selectPetsVo"/>
        <where>
            <if test="name != null  and name != ''"> and p.name = #{name}</if>
            <if test="type != null  and type != ''"> and p.type = #{type}</if>
            <if test="birthday != null "> and p.birthday = #{birthday}</if>
            <if test="insuranceEndAt != null "> and p.insurance_end_at = #{insuranceEndAt}</if>
            <if test="clientId != null "> and p.client_id = #{clientId}</if>
            <if test="insuranceId != null "> and p.insurance_id = #{insuranceId}</if>
            <if test="healthStatus != null  and healthStatus != ''"> and p.health_status = #{healthStatus}</if>
            <if test="clientName != null  and clientName != ''"> and c.name like concat('%', #{clientName}, '%')</if>
        </where>
    </select>

    <select id="selectPetsByPetId" parameterType="Long" resultMap="PetsResult">
        <include refid="selectPetsVo"/>
        where pet_id = #{petId}
    </select>

    <insert id="insertPets" parameterType="Pets" useGeneratedKeys="true" keyProperty="petId">
        insert into pets
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="type != null">type,</if>
            <if test="birthday != null">birthday,</if>
            <if test="insuranceEndAt != null">insurance_end_at,</if>
            <if test="clientId != null">client_id,</if>
            <if test="insuranceId != null">insurance_id,</if>
            <if test="healthStatus != null">health_status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="type != null">#{type},</if>
            <if test="birthday != null">#{birthday},</if>
            <if test="insuranceEndAt != null">#{insuranceEndAt},</if>
            <if test="clientId != null">#{clientId},</if>
            <if test="insuranceId != null">#{insuranceId},</if>
            <if test="healthStatus != null">#{healthStatus},</if>
         </trim>
    </insert>

    <update id="updatePets" parameterType="Pets">
        update pets
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="petPic != null and petPic != ''">pet_pic = #{petPic},</if>
            <if test="type != null">type = #{type},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="insuranceEndAt != null">insurance_end_at = #{insuranceEndAt},</if>
            <if test="clientId != null">client_id = #{clientId},</if>
            <if test="insuranceId != null">insurance_id = #{insuranceId},</if>
            <if test="healthStatus != null">health_status = #{healthStatus},</if>
        </trim>
        where pet_id = #{petId}
    </update>

    <delete id="deletePetsByPetId" parameterType="Long">
        delete from pets where pet_id = #{petId}
    </delete>

    <delete id="deletePetsByPetIds" parameterType="String">
        delete from pets where pet_id in 
        <foreach item="petId" collection="array" open="(" separator="," close=")">
            #{petId}
        </foreach>
    </delete>
    
<!--    <delete id="deleteClientsByClientIds" parameterType="String">-->
<!--        delete from clients where client_id in-->
<!--        <foreach item="clientId" collection="array" open="(" separator="," close=")">-->
<!--            #{clientId}-->
<!--        </foreach>-->
<!--    </delete>-->

<!--    <delete id="deleteClientsByClientId" parameterType="Long">-->
<!--        delete from clients where client_id = #{clientId}-->
<!--    </delete>-->

<!--    <insert id="batchClients">-->
<!--        insert into clients( client_id, name, phone, address) values-->
<!--        <foreach item="item" index="index" collection="list" separator=",">-->
<!--            ( #{item.clientId}, #{item.name}, #{item.phone}, #{item.address})-->
<!--        </foreach>-->
<!--    </insert>-->

</mapper>