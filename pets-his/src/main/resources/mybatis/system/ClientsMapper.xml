<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petHis.project.system.clients.mapper.ClientsMapper">
    
    <resultMap type="Clients" id="ClientsResult">
        <result property="clientId"    column="client_id"    />
        <result property="name"    column="name"    />
        <result property="phone"    column="phone"    />
        <result property="address"    column="address"    />
        <result property="userId"    column="user_id"    />
    </resultMap>

    <sql id="selectClientsVo">
        select client_id, name, phone, address, user_id from clients
    </sql>

    <select id="selectClientsList" parameterType="Clients" resultMap="ClientsResult">
        <include refid="selectClientsVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="address != null  and address != ''"> and address like concat('%', #{address}, '%')</if>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
        </where>
    </select>
    
    <select id="selectClientsByClientId" parameterType="Long" resultMap="ClientsResult">
        <include refid="selectClientsVo"/>
        where client_id = #{clientId}
    </select>
    <select id="selectClientsByUserId" resultType="com.petHis.project.system.clients.domain.Clients">
        <include refid="selectClientsVo"/>
        where user_id = #{userId}
    </select>

    <insert id="insertClients" parameterType="Clients" useGeneratedKeys="true" keyProperty="clientId">
        insert into clients
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="address != null">address,</if>
            <if test="userId != null">user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="address != null">#{address},</if>
            <if test="userId != null">#{userId},</if>
         </trim>
    </insert>

    <update id="updateClients" parameterType="Clients">
        update clients
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="address != null">address = #{address},</if>
        </trim>
        where client_id = #{clientId}
    </update>

    <delete id="deleteClientsByClientId" parameterType="Long">
        delete from clients where client_id = #{clientId}
    </delete>

    <delete id="deleteClientsByClientIds" parameterType="String">
        delete from clients where client_id in 
        <foreach item="clientId" collection="array" open="(" separator="," close=")">
            #{clientId}
        </foreach>
    </delete>

</mapper>